---
title: "Steam Games"
author: "Maximilian M. Krier"
format: pdf
editor: visual
---

# Guiding questions

This report will attempt to answer the following questions.

1.  Does the price of a game influence the review score of a game?
2.  Does playtime influence whether the game is recommended by the reviewer?
3.  Do players find reviewers with more playtime more helpful?
4.  What are the highest reviewed paid games, and their prices?
5.  What are the highest reviewed free games?
6.  What is the optimal price point for paid games?
7.  How does early access effect reviews?

# Introduction

Steam is the industry leading videogame marketplace for PC, Mac, and Linux. This service is used by nearly everyone who plays games on a computer. As a result of this huge traffic, studios all across the world use Steam. Steam has a very sophisticated community review system, this system helps to inform the buyer about the game they are purchasing. This isn't the only factor in deciding whether or not to buy a game, price is a big motivator.

## Primary data set

-   Description: The data set is a compilation of games on the game marketplace Steam.Â  It contains information such as game name, price, review percentage, number of review, release date, and tags.

-   Source: r/gamedev subreddit, posted by user Sadaris.

-   Cases: Each case represents a game on the Steam marketplace.

## Secondary data set

-   Description: This data set is a compilation of reviews of games on Steam. It includes game name, text of the review, review score (positive or negative), and review votes(was this review helpful or not)

-   Source: Kaggle by user ILJUSSA

-   Cases: Each case represents an individual review

# Data wrangling

These data sets will be used both separately and merged to create unique data sets to answer the questions.

## Data cleaning

The primary data set was cleaned using the select function to only include relevant data.

The secondary data set was renamed to more fit the names given to the primary, then cleaned using select to highlight relevant data.

## Visualization

```{r}
#| echo: false
#| message: false
#| warning: false
library(devtools)
library(tidyr)
library(dplyr)
library(ggplot2)
library(reshape2)

#Loading primary data
df_steam <- read.csv("C:/Users/maxkr/Downloads/Steam Trends 2023 by @evlko and @Sadari - Games Data.csv", header=TRUE)
   View(`df_steam`)
#cleaning 
df_steam_clean <- df_steam %>% select(
  Title, 
  Reviews.Total,
  Reviews.Score.Fancy, 
  Release.Date, 
  Launch.Price,
  Revenue.Estimated
)

#filtering
df_steam_filtered <- df_steam_clean %>% 
  filter(Reviews.Total > 0)

#Remove % from reviews
df_steam_filtered$Reviews.Score.Fancy <- gsub("\\%","",df_steam_filtered$Reviews.Score.Fancy)

#Make reviews numeric
df_steam_filtered$Reviews.Score.Fancy <- as.numeric(df_steam_filtered$Reviews.Score.Fancy)

#Remove $ from launch price
df_steam_filtered$Launch.Price <- gsub("\\$","",df_steam_filtered$Launch.Price)

#Replace comma with decimal
df_steam_filtered$Launch.Price <- gsub("\\,", ".", df_steam_filtered$Launch.Price)

#Make launch price numeric
df_steam_filtered$Launch.Price <- as.numeric(df_steam_filtered$Launch.Price)

#Load secondary data set
df_steam_2 <- read.delim("C:/Users/maxkr/OneDrive/Desktop/archive (1)/dataset_top20_cleaned.csv")
  View(`df_steam_2`)

#Rename columns to match primary
df_steam_2_renamed <- df_steam_2 %>% rename(
  Title = app_name,
  Reviews.Text = review_text,
  Review.Score = review_score,
  Review.Votes = review_votes
)

#Clean secondary
df_steam_2_clean <- df_steam_2_renamed %>% select(
  Title,
  Reviews.Text,
  Review.Score,
  Review.Votes
)
df_steam_3 <- df_steam_filtered
df_steam_3 <- df_steam_3 %>% arrange(, desc(Reviews.Total), desc(Reviews.Score.Fancy))
df_steam_3 <- head(df_steam_3, n= 100)
df_steam_3 <- df_steam_3 %>% arrange(desc(Reviews.Score.Fancy))
df_steam_3 <- head(df_steam_3, n= 10)

df_steam_4 <-df_steam_filtered %>% arrange(desc(Launch.Price))
df_steam_4 <- df_steam_filtered %>% 
  filter(Launch.Price <= 1)
df_steam_4 <- df_steam_4 %>% arrange( desc(Reviews.Total))
df_steam_4 <- head(df_steam_4, n= 100)
df_steam_4 <- df_steam_4 %>% arrange(desc(Reviews.Score.Fancy))
df_steam_4 <- head(df_steam_4, n= 10)

#Plot 1 
ggplot(df_steam_filtered, aes(y = Reviews.Score.Fancy, x = Launch.Price)) + 
  geom_smooth()+
  scale_x_continuous(limits = c(0, 100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80 ,90, 100)) +
  scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 100)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Launch Price Vs. Review Percentage",
    x = "Launch Price",
    y = "Review Percentage",
    color = "Black"
  )
```

Plot 1 shows a loose relationship between the launch price and reviews percentage. Average review scores increase as the launch price increases till about \$45. After which the review scores go back down.

```{r}
#| echo: false
#| message: false
#| warning: false
#Plot 2 
ggplot(df_steam_filtered, aes(y = Reviews.Score.Fancy, x = Launch.Price)) + 
  geom_point()+
  scale_x_continuous(limits = c(0, 100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80 ,90, 100)) +
  scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 100)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Launch Price Vs. Review Percentage",
    x = "Launch Price",
    y = "Review Percentage",
    color = "Black"
  )
```

Plot 2 shows each data point in this set. Many of the games falling into the \$0 to \$20 range are evenly distributed across the review percentages. Getting to the middle games tend on average to score higher. After which games begin to score lower on average.

```{r}
#| echo: false
#| message: false
#| warning: false
#Plot 3 
ggplot(df_steam_3, aes(x = Reviews.Total, y =  Launch.Price)) +
  geom_point()+
  geom_smooth()+
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Total Reviews Vs. Launch Price",
    x = "Total Reviews",
    y = "Launch Price",
    color = "Black"
  )
```

Plot 3 shows ver little correlation between total reviews and Launch Price of the 10 ten reviewed steam games.

```{r}
#| echo: false
#| message: false
#| warning: false
View(df_steam_3)
```

# Code Appendix

```{r}
#| message: false
#| warning: false
library(devtools)
library(tidyr)
library(dplyr)
library(ggplot2)
library(reshape2)

#Loading primary data
df_steam <- read.csv("C:/Users/maxkr/Downloads/Steam Trends 2023 by @evlko and @Sadari - Games Data.csv", header=TRUE)
   View(`df_steam`)
#cleaning 
df_steam_clean <- df_steam %>% select(
  Title, 
  Reviews.Total,
  Reviews.Score.Fancy, 
  Release.Date, 
  Launch.Price,
  Revenue.Estimated
)

#filtering
df_steam_filtered <- df_steam_clean %>% 
  filter(Reviews.Total > 0)

#Remove % from reviews
df_steam_filtered$Reviews.Score.Fancy <- gsub("\\%","",df_steam_filtered$Reviews.Score.Fancy)

#Make reviews numeric
df_steam_filtered$Reviews.Score.Fancy <- as.numeric(df_steam_filtered$Reviews.Score.Fancy)

#Remove $ from launch price
df_steam_filtered$Launch.Price <- gsub("\\$","",df_steam_filtered$Launch.Price)

#Replace comma with decimal
df_steam_filtered$Launch.Price <- gsub("\\,", ".", df_steam_filtered$Launch.Price)

#Make launch price numeric
df_steam_filtered$Launch.Price <- as.numeric(df_steam_filtered$Launch.Price)

#Load secondary data set
df_steam_2 <- read.delim("C:/Users/maxkr/OneDrive/Desktop/archive (1)/dataset_top20_cleaned.csv")
  View(`df_steam_2`)

#Rename columns to match primary
df_steam_2_renamed <- df_steam_2 %>% rename(
  Title = app_name,
  Reviews.Text = review_text,
  Review.Score = review_score,
  Review.Votes = review_votes
)

#Clean secondary
df_steam_2_clean <- df_steam_2_renamed %>% select(
  Title,
  Reviews.Text,
  Review.Score,
  Review.Votes
)
df_steam_3 <- df_steam_filtered
df_steam_3 <- df_steam_3 %>% arrange(, desc(Reviews.Total), desc(Reviews.Score.Fancy))
df_steam_3 <- head(df_steam_3, n= 100)
df_steam_3 <- df_steam_3 %>% arrange(desc(Reviews.Score.Fancy))
df_steam_3 <- head(df_steam_3, n= 10)

df_steam_4 <-df_steam_filtered %>% arrange(desc(Launch.Price))
df_steam_4 <- df_steam_filtered %>% 
  filter(Launch.Price <= 1)
df_steam_4 <- df_steam_4 %>% arrange( desc(Reviews.Total))
df_steam_4 <- head(df_steam_4, n= 100)
df_steam_4 <- df_steam_4 %>% arrange(desc(Reviews.Score.Fancy))
df_steam_4 <- head(df_steam_4, n= 10)

#Plot 1 
ggplot(df_steam_filtered, aes(y = Reviews.Score.Fancy, x = Launch.Price)) + 
  geom_smooth()+
  scale_x_continuous(limits = c(0, 100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80 ,90, 100)) +
  scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 100)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Launch Price Vs. Review Percentage",
    x = "Launch Price",
    y = "Review Percentage",
    color = "Black"
  )
#Plot 2 
ggplot(df_steam_filtered, aes(y = Reviews.Score.Fancy, x = Launch.Price)) + 
  geom_point()+
  scale_x_continuous(limits = c(0, 100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80 ,90, 100)) +
  scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 100)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Launch Price Vs. Review Percentage",
    x = "Launch Price",
    y = "Review Percentage",
    color = "Black"
  )

#Plot 3 
ggplot(df_steam_3, aes(x = Reviews.Total, y =  Launch.Price)) +
  geom_point()+
  geom_smooth()+
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)
  ) +
  labs(
    title = "Total Reviews Vs. Launch Price",
    x = "Total Reviews",
    y = "Launch Price",
    color = "Black"
  )

corr_data <- df_steam_filtered %>%
  select(
    Launch.Price,
    Reviews.Total,
    Reviews.Score.Fancy
  )
cor_matrix <- cor(corr_data)

cor_melted <- melt(cor_matrix)

#Plot 4 
ggplot(data = cor_melted, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile(color = "white")+
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
    axis.title = element_blank()
  ) 

```

\
